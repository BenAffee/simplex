#include "mainwindow.h"
#include "ui_mainwindow.h"
//*************************************************************************************************************
//*************************************************************************************************************
//*************************************************************************************************************
//*************************************************************************************************************
//----------------МЕТОД ПОИСКА БАЗИСНЫХ ПЕРЕМЕННЫХ И ОТРИСОВКИ МОДЕЛИ В ТАБЛВЬЮ--------------------------------
//*************************************************************************************************************
//*************************************************************************************************************
//*************************************************************************************************************
//*************************************************************************************************************
void MainWindow::bazisAndGetModel(){
    //определяем базисные переменные
    //перебираем матрицу, тольконе по строкам, а по столбцам
    //внутри считаем колтчество ненулевых коэффициентов
    //если коэффициент только один, то считаем эту переменную базисной
    //номер этой переменной записываем в вектор базисов
    bazisSimplex.fill(-1,simplexTable.size()-1);
    for(i=0; i < maxCol-2; i++){
        notNull = 0;
        for(j=0; j < simplexTable.size()-1; j++){
            if(fabs(simplexTable[j][i]) > 0){
                numNull=j;
                notNull++;
            }
        }
        if(notNull == 1) bazisSimplex[numNull] = i;
    }

    //выводим строку в статус-бокс
    tmpString.clear();
    foreach(i,bazisSimplex)
        tmpString.append(QString::number(i) + ",");
    ui->status->append("Базис: " + tmpString);

    //qDebug()<<"Базис: "<< bazisSimplex;


    //заполняем вертикальный заголовок (базисы)
    tmpStringList.clear();
    for(i=0; i < simplexTable.size()-1; i++){
        tmpStringList.append("x" + QString::number(bazisSimplex[i]));
    }
    tmpStringList.append("Z");
    simplexTabModel->setVerticalHeaderLabels(tmpStringList);

    //перебирираем все элементы в симплекс таблице и записываем их в модель
    for(i=0; i<simplexTable.size(); i++){
        tmpVector = simplexTable[i];
        for(j=0; j<maxCol-1; j++){
            modIndex = simplexTabModel->index(i, j);
            simplexTabModel->setData(modIndex,tmpVector[j]);
        }
    }
}


//метод поиска базиса без отрисовки в таблицу
void MainWindow::onlyBazisNoOutput(){
    //определяем базисные переменные
    //перебираем матрицу, тольконе по строкам, а по столбцам
    //внутри считаем колтчество ненулевых коэффициентов
    //если коэффициент только один, то считаем эту переменную базисной
    //номер этой переменной записываем в вектор базисов
    bazisSimplex.fill(-1,simplexTable.size()-1);
    for(i=0; i < maxCol-2; i++){
        notNull = 0;
        for(j=0; j < simplexTable.size()-1; j++){
            if(fabs(simplexTable[j][i]) > 0){
                numNull=j;
                notNull++;
            }
        }
        if(notNull == 1) bazisSimplex[numNull] = i;
    }
}


//*************************************************************************************************************
//*************************************************************************************************************
//*************************************************************************************************************
//*************************************************************************************************************
//----------------МЕТОД ПОИСКА БАЗИСНЫХ ПЕРЕМЕННЫХ И ОТРИСОВКИ МОДЕЛИ В ТАБЛВЬЮ C
//--------------------------------ЦЕЛОЧИСЛЕННЫЙ
//*************************************************************************************************************
//*************************************************************************************************************
//*************************************************************************************************************
//*************************************************************************************************************
void MainWindow::ibazisAndGetModel(){
    //определяем базисные переменные
    //перебираем матрицу, тольконе по строкам, а по столбцам
    //внутри считаем колтчество ненулевых коэффициентов
    //если коэффициент только один, то считаем эту переменную базисной
    //номер этой переменной записываем в вектор базисов
    bazisSimplex.fill(-1,iSimplexTable.size()-1);
    for(i=0; i < maxCol-2; i++){
        notNull = 0;
        for(j=0; j < iSimplexTable.size()-1; j++){
            if(abs(iSimplexTable[j][i]) > 0){
                numNull=j;
                notNull++;
            }
        }
        if(notNull == 1) bazisSimplex[numNull] = i;
    }

    //выводим строку в статус-бокс
    tmpString.clear();
    foreach(i,bazisSimplex)
        tmpString.append(QString::number(i) + ",");
    ui->status->append("Базис: " + tmpString);

    //qDebug()<<"Базис: "<< bazisSimplex;


    //заполняем вертикальный заголовок (базисы)
    tmpStringList.clear();
    for(i=0; i < simplexTable.size()-1; i++){
        tmpStringList.append("x" + QString::number(bazisSimplex[i]));
    }
    tmpStringList.append("Z");
    simplexTabModel->setVerticalHeaderLabels(tmpStringList);

    //перебирираем все элементы в симплекс таблице и записываем их в модель
    for(i=0; i<iSimplexTable.size(); i++){
        iTmpVector = iSimplexTable[i];
        for(j=0; j<maxCol-1; j++){
            modIndex = simplexTabModel->index(i, j);
            simplexTabModel->setData(modIndex,iTmpVector[j]);
        }
    }
}


//метод поиска базиса без отрисовки в таблицу
void MainWindow::ionlyBazisNoOutput(){
    //определяем базисные переменные
    //перебираем матрицу, тольконе по строкам, а по столбцам
    //внутри считаем колтчество ненулевых коэффициентов
    //если коэффициент только один, то считаем эту переменную базисной
    //номер этой переменной записываем в вектор базисов
    bazisSimplex.fill(-1,iSimplexTable.size()-1);
    for(i=0; i < maxCol-2; i++){
        notNull = 0;
        for(j=0; j < iSimplexTable.size()-1; j++){
            if(abs(iSimplexTable[j][i]) > 0){
                numNull=j;
                notNull++;
            }
        }
        if(notNull == 1) bazisSimplex[numNull] = i;
    }
}
